{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assetbundles/webperf/src/vue/charts/common/SmallRadialBarChart.vue?70d1","webpack:///src/assetbundles/webperf/src/vue/charts/common/SmallRadialBarChart.vue","webpack:///./src/assetbundles/webperf/src/vue/charts/common/SmallRadialBarChart.vue?59e5","webpack:///./src/assetbundles/webperf/src/vue/charts/common/SmallRadialBarChart.vue","webpack:///./src/assetbundles/webperf/src/vue/charts/common/SmallSimpleBarChart.vue?3266","webpack:///src/assetbundles/webperf/src/vue/charts/common/SmallSimpleBarChart.vue","webpack:///./src/assetbundles/webperf/src/vue/charts/common/SmallSimpleBarChart.vue?e6f5","webpack:///./src/assetbundles/webperf/src/vue/charts/common/SmallSimpleBarChart.vue","webpack:///./src/assetbundles/webperf/src/vue/common/SmallSamplePaneFooter.vue?4b45","webpack:///src/assetbundles/webperf/src/vue/common/SmallSamplePaneFooter.vue","webpack:///./src/assetbundles/webperf/src/vue/common/SmallSamplePaneFooter.vue?e573","webpack:///./src/assetbundles/webperf/src/vue/common/SmallSamplePaneFooter.vue","webpack:///./src/assetbundles/webperf/src/js/sidebar.js","webpack:///./src/assetbundles/webperf/src/js/tri-color-blend.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","7","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","render","_h","this","$createElement","_self","_c","attrs","width","height","type","options","chartOptions","series","_withStripped","queryApi","api","uri","params","callback","delimiter","_i","_Object$keys","keys","encodeURIComponent","then","catch","error","console","log","common_SmallRadialBarChartvue_type_script_lang_js_","components","apexcharts","vue_apexcharts_default","a","props","title","String","start","end","column","pageUrl","default","fastColor","averageColor","slowColor","maxValue","Number","siteId","methods","getSeriesData","_getSeriesData","regeneratorRuntime","mark","_callee","chartsAPI","_this","wrap","_context","prev","next","axios_default","baseURL","headers","X-Requested-With","displayStart","displayEnd","undefined","avg","val","displayMaxValue","chartColor","triBlend","colorFromPercentage","_objectSpread","colors","plotOptions","radialBar","dataLabels","color","stop","arguments","onChangeRange","range","created","mounted","_this2","$events","$on","eventData","_this3","chart","id","fontFamily","toolbar","show","states","hover","filter","startAngle","endAngle","hollow","size","track","background","strokeWidth","margin","shadow","enabled","top","left","opacity","blur","fontSize","offsetY","style","cssClass","formatter","toFixed","labels","text","align","stroke","lineCap","tri_color_blend","component","componentNormalizer","__file","SmallRadialBarChart","SmallSimpleBarChartvue_type_template_id_48828382_render","_vm","staticClass","_v","_s","statFormatter","backgroundColor","barColor","SmallSimpleBarChartvue_type_script_lang_js_queryApi","common_SmallSimpleBarChartvue_type_script_lang_js_","SmallSimpleBarChart_component","SmallSimpleBarChart","SmallSamplePaneFootervue_type_template_id_20e8841b_render","samples","formatNumber","_e","SmallSamplePaneFootervue_type_script_lang_js_queryApi","common_SmallSamplePaneFootervue_type_script_lang_js_","displayDevModeWarning","Boolean","subject","cnt","number","toString","replace","SmallSamplePaneFooter_component","SmallSamplePaneFooter","Vue","el","small-radial-bar-chart","small-simple-bar-chart","small-sample-pane-footer","TriColorBlend","clr1","clr2","clr3","_classCallCheck","HexToRGB","g","b","h","toUpperCase","Array","join","hex","exec","parseInt","startColor","endColor","multiplier","Math","round","RGBToHex"],"mappings":"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","file":"js/sidebar.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t7: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([185,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"apexcharts\", {\n    attrs: {\n      width: \"100%\",\n      height: \"180px\",\n      type: \"radialBar\",\n      options: _vm.chartOptions,\n      series: _vm.series\n    }\n  })\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n    <apexcharts width=\"100%\" height=\"180px\" type=\"radialBar\" :options=\"chartOptions\" :series=\"series\"></apexcharts>\n</template>\n\n<script>\n    import Axios from 'axios';\n    import ApexCharts from 'vue-apexcharts';\n    import TriBlendColor from '../../../js/tri-color-blend.js';\n\n    const chartDataBaseUrl = '/webperf/charts/dashboard-stats-average/';\n\n    // Configure the api endpoint\n    const configureApi = (url) => {\n        return {\n            baseURL: url,\n            headers: {\n                'X-Requested-With': 'XMLHttpRequest'\n            }\n        };\n    };\n    // Query our API endpoint via an XHR GET\n    const queryApi = (api, uri, params, callback) => {\n        let delimiter='?';\n        for (const key of Object.keys(params)) {\n            uri = uri + delimiter + encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n            delimiter = '&';\n        }\n        api.get(uri\n        ).then((result) => {\n            if (callback) {\n                callback(result.data);\n            }\n        }).catch((error) => {\n            console.log(error);\n        })\n    };\n\n    // Our component exports\n    export default {\n        components: {\n            'apexcharts': ApexCharts,\n        },\n        props: {\n            title: String,\n            start: String,\n            end: String,\n            column: String,\n            pageUrl: {\n                type: String,\n                default: '',\n            },\n            fastColor: {\n                type: String,\n                default: '#00C800',\n            },\n            averageColor: {\n                type: String,\n                default: '#FFFF00',\n            },\n            slowColor: {\n                type: String,\n                default: '#C80000',\n            },\n            maxValue: Number,\n            siteId: {\n                type: Number,\n                default: 0,\n            }\n        },\n        methods: {\n            // Load in our chart data asynchronously\n            getSeriesData: async function() {\n                const chartsAPI = Axios.create(configureApi(chartDataBaseUrl));\n                let uri = this.column;\n                if (this.siteId !== 0) {\n                    uri += '/' + this.siteId;\n                }\n                let params = {\n                    'start': this.displayStart,\n                    'end': this.displayEnd,\n                    'pageUrl': this.pageUrl,\n                };\n                await queryApi(chartsAPI, uri, params, (data) => {\n                    if (data.avg !== undefined) {\n                        let val = data.avg / 1000;\n                        if (val > this.displayMaxValue) {\n                            this.displayMaxValue = val;\n                        }\n                        val = (val * 100) / this.displayMaxValue;\n                        let chartColor = this.triBlend.colorFromPercentage(val);\n                        this.chartOptions = {\n                            ...this.chartOptions, ...{\n                                colors: [chartColor],\n                                plotOptions: {\n                                    radialBar: {\n                                        dataLabels: {\n                                            value: {\n                                                color: chartColor,\n                                            }\n                                        }\n                                    }\n                                },\n                            }\n                        };\n                        this.series = [val];\n                    }\n                });\n            },\n            onChangeRange (range) {\n                this.displayStart = range.start;\n                this.displayEnd = range.end;\n                this.getSeriesData();\n            },\n        },\n        created () {\n            this.getSeriesData();\n        },\n        mounted() {\n            if (this.$events !== undefined) {\n                this.$events.$on('change-range', eventData => this.onChangeRange(eventData));\n            }\n        },\n        data: function() {\n            return {\n                chartOptions: {\n                    chart: {\n                        id: 'vuechart-dashboard-radial-bar',\n                        fontFamily: 'inherit',\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                    states: {\n                        hover: {\n                            filter: {\n                                type: 'none',\n                                value: 0,\n                            }\n                        },\n                    },\n                    colors: ['#000000'],\n                    plotOptions: {\n                        radialBar: {\n                            startAngle: -135,\n                            endAngle: 135,\n                            hollow: {\n                                size: '65%',\n                            },\n                            track: {\n                                background: \"#dae1e7\",\n                                strokeWidth: '97%',\n                                margin: 5, // margin is in pixels\n                                shadow: {\n                                    enabled: true,\n                                    top: 2,\n                                    left: 0,\n                                    color: '#999',\n                                    opacity: 1,\n                                    blur: 2\n                                }\n                            },\n                            dataLabels: {\n                                name: {\n                                    show: false,\n                                    fontSize: '16px',\n                                    color: '#333',\n                                    offsetY: 100\n                                },\n                                value: {\n                                    offsetY: 6,\n                                    fontSize: '18px',\n                                    color: '#333',\n                                    style: {\n                                        cssClass: 'apexcharts-datalabel-value',\n                                    },\n                                    formatter: (val) => {\n                                        val = (val * this.displayMaxValue) / 100;\n                                        return Number(val).toFixed(2) + \"s\";\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    labels: [this.title],\n                    title: {\n                        text: this.title,\n                        offsetY: 20,\n                        align: 'center',\n                        style: {\n                            color: '#606f7b',\n                            fontSize: '15px',\n                            cssClass: 'apexcharts-title-text'\n                        }\n                    },\n                    stroke: {\n                        width: 1,\n                        lineCap: 'round'\n                    },\n                },\n                series: [0],\n                displayStart: this.start,\n                displayEnd: this.end,\n                displayMaxValue: this.maxValue,\n                triBlend: new TriBlendColor(this.fastColor, this.averageColor, this.slowColor),\n            }\n        },\n    }\n</script>\n","import mod from \"-!../../../../../../../node_modules/babel-loader/lib/index.js??ref--0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SmallRadialBarChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../node_modules/babel-loader/lib/index.js??ref--0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SmallRadialBarChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SmallRadialBarChart.vue?vue&type=template&id=006a89a8&\"\nimport script from \"./SmallRadialBarChart.vue?vue&type=script&lang=js&\"\nexport * from \"./SmallRadialBarChart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/vagrant/webdev/craft/craft-webperf/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('006a89a8', component.options)\n    } else {\n      api.reload('006a89a8', component.options)\n    }\n    module.hot.accept(\"./SmallRadialBarChart.vue?vue&type=template&id=006a89a8&\", function () {\n      api.rerender('006a89a8', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/assetbundles/webperf/src/vue/charts/common/SmallRadialBarChart.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"simple-bar-chart-wrapper px-3 py-1\" }, [\n    _c(\"div\", { staticClass: \"clearafter py-1\" }, [\n      _c(\n        \"div\",\n        {\n          staticClass: \"simple-bar-chart-label text-sm font-bold text-gray-600\"\n        },\n        [_vm._v(_vm._s(_vm.title))]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        {\n          staticClass: \"simple-bar-chart-value text-sm font-bold text-gray-600\"\n        },\n        [_vm._v(_vm._s(_vm.statFormatter(_vm.series[0])))]\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"py-1\" }, [\n      _c(\n        \"div\",\n        { staticClass: \"simple-bar-chart-track rounded-full bg-gray-300\" },\n        [\n          _c(\"div\", {\n            staticClass: \"simple-bar-line h-1 rounded-full\",\n            style: { width: _vm.series[0] + \"%\", backgroundColor: _vm.barColor }\n          })\n        ]\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"simple-bar-chart-wrapper px-3 py-1\">\n        <div class=\"clearafter py-1\">\n            <div class=\"simple-bar-chart-label text-sm font-bold text-gray-600\">{{ title }}</div>\n            <div class=\"simple-bar-chart-value text-sm font-bold text-gray-600\">{{ statFormatter(series[0]) }}</div>\n        </div>\n        <div class=\"py-1\">\n            <div class=\"simple-bar-chart-track rounded-full bg-gray-300\">\n                <div class=\"simple-bar-line h-1 rounded-full\" :style=\"{ width: series[0] + '%', backgroundColor: barColor }\"></div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import Axios from 'axios';\n    import TriBlendColor from '../../../js/tri-color-blend.js';\n\n    const chartDataBaseUrl = '/webperf/charts/dashboard-stats-average/';\n\n    // Configure the api endpoint\n    const configureApi = (url) => {\n        return {\n            baseURL: url,\n            headers: {\n                'X-Requested-With': 'XMLHttpRequest'\n            }\n        };\n    };\n    // Query our API endpoint via an XHR GET\n    const queryApi = (api, uri, params, callback) => {\n        let delimiter='?';\n        for (const key of Object.keys(params)) {\n            uri = uri + delimiter + encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n            delimiter = '&';\n        }\n        api.get(uri\n        ).then((result) => {\n            if (callback) {\n                callback(result.data);\n            }\n        }).catch((error) => {\n            console.log(error);\n        })\n    };\n\n    // Our component exports\n    export default {\n        components: {\n        },\n        props: {\n            title: String,\n            start: String,\n            end: String,\n            column: String,\n            pageUrl: {\n                type: String,\n                default: '',\n            },\n            fastColor: {\n                type: String,\n                default: '#00C800',\n            },\n            averageColor: {\n                type: String,\n                default: '#FFFF00',\n            },\n            slowColor: {\n                type: String,\n                default: '#C80000',\n            },\n            maxValue: Number,\n            siteId: {\n                type: Number,\n                default: 0,\n            }\n        },\n        methods: {\n            // Load in our chart data asynchronously\n            getSeriesData: async function() {\n                const chartsAPI = Axios.create(configureApi(chartDataBaseUrl));\n                let uri = this.column;\n                if (this.siteId !== 0) {\n                    uri += '/' + this.siteId;\n                }\n                let params = {\n                    'start': this.displayStart,\n                    'end': this.displayEnd,\n                    'pageUrl': this.pageUrl\n                };\n                await queryApi(chartsAPI, uri, params, (data) => {\n                    if (data.avg !== undefined) {\n                        let val = data.avg / 1000;\n                        if (val > this.displayMaxValue) {\n                            this.displayMaxValue = val;\n                        }\n                        val = (val * 100) / this.displayMaxValue;\n                        this.barColor = this.triBlend.colorFromPercentage(val);\n                        this.series = [val];\n                    }\n                });\n            },\n            onChangeRange (range) {\n                this.displayStart = range.start;\n                this.displayEnd = range.end;\n                this.getSeriesData();\n            },\n            statFormatter(val) {\n                val = (val * this.displayMaxValue) / 100;\n                return Number(val).toFixed(2) + \"s\";\n            }\n        },\n        created () {\n            this.getSeriesData();\n        },\n        mounted() {\n            if (this.$events !== undefined) {\n                this.$events.$on('change-range', eventData => this.onChangeRange(eventData));\n            }\n        },\n        data: function() {\n            return {\n                barColor: '#000',\n                series: [0],\n                displayStart: this.start,\n                displayEnd: this.end,\n                displayMaxValue: this.maxValue,\n                triBlend: new TriBlendColor(this.fastColor, this.averageColor, this.slowColor),\n            }\n        },\n    }\n</script>\n","import mod from \"-!../../../../../../../node_modules/babel-loader/lib/index.js??ref--0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SmallSimpleBarChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../node_modules/babel-loader/lib/index.js??ref--0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SmallSimpleBarChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SmallSimpleBarChart.vue?vue&type=template&id=48828382&\"\nimport script from \"./SmallSimpleBarChart.vue?vue&type=script&lang=js&\"\nexport * from \"./SmallSimpleBarChart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/vagrant/webdev/craft/craft-webperf/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('48828382', component.options)\n    } else {\n      api.reload('48828382', component.options)\n    }\n    module.hot.accept(\"./SmallSimpleBarChart.vue?vue&type=template&id=48828382&\", function () {\n      api.rerender('48828382', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/assetbundles/webperf/src/vue/charts/common/SmallSimpleBarChart.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"field\" }, [\n    _vm.samples >= 100\n      ? _c(\"div\", { staticClass: \"heading\" }, [\n          _c(\"p\", { staticClass: \"instructions\" }, [\n            _vm._v(\"Average of \"),\n            _c(\"strong\", [_vm._v(_vm._s(_vm.formatNumber(_vm.samples)))]),\n            _vm._v(\" data sample\"),\n            _vm.samples !== 1 ? _c(\"span\", [_vm._v(\"s\")]) : _vm._e(),\n            _vm._v(\".\")\n          ])\n        ])\n      : _vm._e(),\n    _vm._v(\" \"),\n    _vm.samples < 100\n      ? _c(\"p\", { staticClass: \"warning\" }, [\n          _vm._v(\"Average of only \"),\n          _c(\"strong\", [_vm._v(_vm._s(_vm.formatNumber(_vm.samples)))]),\n          _vm._v(\" data sample\"),\n          _vm.samples !== 1 ? _c(\"span\", [_vm._v(\"s\")]) : _vm._e(),\n          _vm._v(\".\")\n        ])\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"field\">\n        <div v-if=\"samples >= 100\" class=\"heading\">\n            <p class=\"instructions\">Average of <strong>{{ formatNumber(samples) }}</strong> data sample<span v-if=\"samples !== 1\">s</span>.</p>\n        </div>\n        <p v-if=\"samples < 100\" class=\"warning\">Average of only <strong>{{ formatNumber(samples) }}</strong> data sample<span v-if=\"samples !== 1\">s</span>.</p>\n    </div>\n</template>\n\n<script>\n    import Axios from 'axios';\n\n    const chartDataBaseUrl = '/webperf/charts/dashboard-stats-average/';\n\n    // Configure the api endpoint\n    const configureApi = (url) => {\n        return {\n            baseURL: url,\n            headers: {\n                'X-Requested-With': 'XMLHttpRequest'\n            }\n        };\n    };\n    // Query our API endpoint via an XHR GET\n    const queryApi = (api, uri, params, callback) => {\n        let delimiter='?';\n        for (const key of Object.keys(params)) {\n            uri = uri + delimiter + encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n            delimiter = '&';\n        }\n        api.get(uri\n        ).then((result) => {\n            if (callback) {\n                callback(result.data);\n            }\n        }).catch((error) => {\n            console.log(error);\n        })\n    };\n\n    // Our component exports\n    export default {\n        components: {\n        },\n        props: {\n            start: String,\n            end: String,\n            column: String,\n            displayDevModeWarning: {\n                type: Boolean,\n                default: false\n            },\n            pageUrl: {\n                type: String,\n                default: '',\n            },\n            subject: {\n                type: String,\n                default: '',\n            },\n            siteId: {\n                type: Number,\n                default: 0,\n            }\n        },\n        methods: {\n            // Load in our chart data asynchronously\n            getSeriesData: async function() {\n                const chartsAPI = Axios.create(configureApi(chartDataBaseUrl));\n                let uri = this.column;\n                if (this.siteId !== 0) {\n                    uri += '/' + this.siteId;\n                }\n                let params = {\n                    'start': this.displayStart,\n                    'end': this.displayEnd,\n                    'pageUrl': this.pageUrl,\n                };\n                await queryApi(chartsAPI, uri, params, (data) => {\n                    if (data.cnt !== undefined) {\n                        this.samples = data.cnt;\n                    }\n                });\n            },\n            onChangeRange (range) {\n                this.displayStart = range.start;\n                this.displayEnd = range.end;\n                this.getSeriesData();\n            },\n            formatNumber(number) {\n                return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            }\n        },\n        created () {\n            this.getSeriesData();\n        },\n        mounted() {\n            if (this.$events !== undefined) {\n                this.$events.$on('change-range', eventData => this.onChangeRange(eventData));\n            }\n        },\n        data: function() {\n            return {\n                samples: 0,\n                displayEnd: this.end,\n                displayMaxValue: this.maxValue,\n            }\n        },\n    }\n</script>\n","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SmallSamplePaneFooter.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SmallSamplePaneFooter.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SmallSamplePaneFooter.vue?vue&type=template&id=20e8841b&\"\nimport script from \"./SmallSamplePaneFooter.vue?vue&type=script&lang=js&\"\nexport * from \"./SmallSamplePaneFooter.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/vagrant/webdev/craft/craft-webperf/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('20e8841b', component.options)\n    } else {\n      api.reload('20e8841b', component.options)\n    }\n    module.hot.accept(\"./SmallSamplePaneFooter.vue?vue&type=template&id=20e8841b&\", function () {\n      api.rerender('20e8841b', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/assetbundles/webperf/src/vue/common/SmallSamplePaneFooter.vue\"\nexport default component.exports","import Vue from 'vue';\nimport SmallRadialBarChart from '../vue/charts/common/SmallRadialBarChart.vue';\nimport SmallSimpleBarChart from '../vue/charts/common/SmallSimpleBarChart.vue';\nimport SmallSamplePaneFooter from '../vue/common/SmallSamplePaneFooter.vue';\n\n// Create our vue instance\nconst vm = new Vue({\n    el: \"#cp-nav-content\",\n    components: {\n        'small-radial-bar-chart': SmallRadialBarChart,\n        'small-simple-bar-chart': SmallSimpleBarChart,\n        'small-sample-pane-footer': SmallSamplePaneFooter,\n    },\n    data: {\n    },\n    mounted() {\n    },\n});\n\n// Accept HMR as per: https://webpack.js.org/api/hot-module-replacement#accept\nif (module.hot) {\n    module.hot.accept();\n}\n","export default class TriColorBlend {\n\n    constructor(clr1 = '#00C800', clr2 = '#FFFF00', clr3 = '#C80000')\n    {\n        this.clr1 = this.HexToRGB(clr1);\n        this.clr2 = this.HexToRGB(clr2);\n        this.clr3 = this.HexToRGB(clr3);\n    }\n\n    RGBToHex(r, g, b)\n    {\n        let bin = r << 16 | g << 8 | b;\n        return (function (h) {\n            return new Array(7 - h.length).join(\"0\") + h\n        })(bin.toString(16).toUpperCase())\n    }\n\n    HexToRGB(hex)\n    {\n        let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16)\n        } : null;\n    }\n\n    colorFromPercentage(val)\n    {\n        let startColor = this.clr1;\n        let endColor = this.clr2;\n        if (val >= 50) {\n            startColor = this.clr2;\n            endColor = this.clr3;\n            val = val - 50;\n        }\n        const multiplier = (val / 50);\n        const r = Math.round(startColor.r + multiplier * (endColor.r - startColor.r));\n        const g = Math.round(startColor.g + multiplier * (endColor.g - startColor.g));\n        const b = Math.round(startColor.b + multiplier * (endColor.b - startColor.b));\n        return '#' + this.RGBToHex(r,g,b);\n    }\n}\n"],"sourceRoot":""}