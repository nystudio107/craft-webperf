{"version":3,"sources":["webpack://webperf/../src/assetbundles/webperf/src/vue/charts/common/SmallRadialBarChart.vue?aff1","webpack://webperf/../src/assetbundles/webperf/src/vue/charts/common/SmallRadialBarChart.vue","webpack://webperf/../src/assetbundles/webperf/src/vue/charts/common/SmallRadialBarChart.vue?5e61","webpack://webperf/../src/assetbundles/webperf/src/vue/charts/common/SmallRadialBarChart.vue?7ef8","webpack://webperf/../src/assetbundles/webperf/src/vue/charts/common/SmallSimpleBarChart.vue","webpack://webperf/../src/assetbundles/webperf/src/vue/charts/common/SmallSimpleBarChart.vue?2703","webpack://webperf/../src/assetbundles/webperf/src/vue/charts/common/SmallSimpleBarChart.vue?aeee","webpack://webperf/../src/assetbundles/webperf/src/vue/charts/common/SmallSimpleBarChart.vue?9e91","webpack://webperf/../src/assetbundles/webperf/src/vue/common/SmallSamplePaneFooter.vue","webpack://webperf/../src/assetbundles/webperf/src/vue/common/SmallSamplePaneFooter.vue?dd48","webpack://webperf/../src/assetbundles/webperf/src/vue/common/SmallSamplePaneFooter.vue?ee84","webpack://webperf/../src/assetbundles/webperf/src/vue/common/SmallSamplePaneFooter.vue?dea2","webpack://webperf/../src/assetbundles/webperf/src/js/sidebar.js"],"names":["_vm","this","_h","$createElement","_self","_c","attrs","chartOptions","series","staticClass","_v","_s","title","statFormatter","style","width","backgroundColor","barColor","samples","formatNumber","_e","Vue","el","components","SmallRadialBarChart","SmallSimpleBarChart","SmallSamplePaneFooter","data","mounted"],"mappings":"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","file":"js/sidebar.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('apexcharts',{attrs:{\"width\":\"100%\",\"height\":\"180px\",\"type\":\"radialBar\",\"options\":_vm.chartOptions,\"series\":_vm.series}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <apexcharts width=\"100%\" height=\"180px\" type=\"radialBar\"\n                :options=\"chartOptions\" :series=\"series\"></apexcharts>\n</template>\n\n<script>\n    import Axios from 'axios';\n    import ApexCharts from 'vue-apexcharts';\n    import TriBlendColor from '@/js/tri-color-blend.js';\n\n    // Configure the api endpoint\n    const configureApi = (url) => {\n        return {\n            baseURL: url,\n            headers: {\n                'X-Requested-With': 'XMLHttpRequest'\n            }\n        };\n    };\n    // Query our API endpoint via an XHR GET\n    const queryApi = (api, uri, params, callback) => {\n        api.get(uri, {params: params})\n            .then((result) => {\n                if (callback) {\n                    callback(result.data);\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    };\n\n    // Our component exports\n    export default {\n        components: {\n            'apexcharts': ApexCharts,\n        },\n        props: {\n            title: String,\n            start: String,\n            end: String,\n            column: String,\n            pageUrl: {\n                type: String,\n                default: '',\n            },\n            fastColor: {\n                type: String,\n                default: '#00C800',\n            },\n            averageColor: {\n                type: String,\n                default: '#FFFF00',\n            },\n            slowColor: {\n                type: String,\n                default: '#C80000',\n            },\n            maxValue: Number,\n            siteId: {\n                type: Number,\n                default: 0,\n            },\n            apiUrl: {\n                type: String,\n                default: '',\n            },\n        },\n        methods: {\n            // Load in our chart data asynchronously\n            getSeriesData: async function() {\n                const chartsAPI = Axios.create(configureApi(this.apiUrl));\n                let params = {\n                    'column': this.column,\n                    'start': this.displayStart,\n                    'end': this.displayEnd,\n                    'pageUrl': this.pageUrl,\n                    'siteId': this.siteId,\n                };\n                await queryApi(chartsAPI, '', params, (data) => {\n                    if (data.avg !== undefined) {\n                        let val = data.avg / 1000;\n                        if (val > this.displayMaxValue) {\n                            this.displayMaxValue = val;\n                        }\n                        val = (val * 100) / this.displayMaxValue;\n                        let chartColor = this.triBlend.colorFromPercentage(val);\n                        this.chartOptions = {\n                            ...this.chartOptions, ...{\n                                colors: [chartColor],\n                                plotOptions: {\n                                    radialBar: {\n                                        dataLabels: {\n                                            value: {\n                                                color: chartColor,\n                                            }\n                                        }\n                                    }\n                                },\n                            }\n                        };\n                        this.series = [val];\n                    }\n                });\n            },\n            onChangeRange(range) {\n                this.displayStart = range.start;\n                this.displayEnd = range.end;\n                this.getSeriesData();\n            },\n        },\n        created() {\n            this.getSeriesData();\n        },\n        mounted() {\n            if (this.$events !== undefined) {\n                this.$events.$on('change-range', eventData => this.onChangeRange(eventData));\n            }\n        },\n        data: function() {\n            return {\n                chartOptions: {\n                    chart: {\n                        id: 'vuechart-dashboard-radial-bar',\n                        fontFamily: 'inherit',\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                    states: {\n                        hover: {\n                            filter: {\n                                type: 'none',\n                                value: 0,\n                            }\n                        },\n                    },\n                    colors: ['#000000'],\n                    plotOptions: {\n                        radialBar: {\n                            startAngle: -135,\n                            endAngle: 135,\n                            hollow: {\n                                size: '65%',\n                            },\n                            track: {\n                                background: \"#dae1e7\",\n                                strokeWidth: '97%',\n                                margin: 5, // margin is in pixels\n                                shadow: {\n                                    enabled: true,\n                                    top: 2,\n                                    left: 0,\n                                    color: '#999',\n                                    opacity: 1,\n                                    blur: 2\n                                }\n                            },\n                            dataLabels: {\n                                name: {\n                                    show: false,\n                                    fontSize: '16px',\n                                    color: '#333',\n                                    offsetY: 100\n                                },\n                                value: {\n                                    offsetY: 6,\n                                    fontSize: '18px',\n                                    color: '#333',\n                                    style: {\n                                        cssClass: 'apexcharts-datalabel-value',\n                                    },\n                                    formatter: (val) => {\n                                        val = (val * this.displayMaxValue) / 100;\n                                        return Number(val).toFixed(2) + \"s\";\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    labels: [this.title],\n                    title: {\n                        text: this.title,\n                        offsetY: 20,\n                        align: 'center',\n                        style: {\n                            color: '#606f7b',\n                            fontSize: '15px',\n                            cssClass: 'apexcharts-title-text'\n                        }\n                    },\n                    stroke: {\n                        width: 1,\n                        lineCap: 'round'\n                    },\n                },\n                series: [0],\n                displayStart: this.start,\n                displayEnd: this.end,\n                displayMaxValue: this.maxValue,\n                triBlend: new TriBlendColor(this.fastColor, this.averageColor, this.slowColor),\n            }\n        },\n    }\n</script>\n","import mod from \"-!../../../../../../../buildchain/node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use!../../../../../../../buildchain/node_modules/vue-loader/lib/index.js??vue-loader-options!./SmallRadialBarChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../buildchain/node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use!../../../../../../../buildchain/node_modules/vue-loader/lib/index.js??vue-loader-options!./SmallRadialBarChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SmallRadialBarChart.vue?vue&type=template&id=42867dcf&\"\nimport script from \"./SmallRadialBarChart.vue?vue&type=script&lang=js&\"\nexport * from \"./SmallRadialBarChart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../buildchain/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div class=\"simple-bar-chart-wrapper px-3 py-1\">\n        <div class=\"clearafter py-1\">\n            <div class=\"simple-bar-chart-label text-sm font-bold text-gray-600\">{{ title }}</div>\n            <div class=\"simple-bar-chart-value text-sm font-bold text-gray-600\">{{ statFormatter(series[0]) }}</div>\n        </div>\n        <div class=\"py-1\">\n            <div class=\"simple-bar-chart-track rounded-full bg-gray-300\">\n                <div class=\"simple-bar-line h-1 rounded-full\" :style=\"{ width: series[0] + '%', backgroundColor: barColor }\"></div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import Axios from 'axios';\n    import TriBlendColor from '@/js/tri-color-blend.js';\n\n    // Configure the api endpoint\n    const configureApi = (url) => {\n        return {\n            baseURL: url,\n            headers: {\n                'X-Requested-With': 'XMLHttpRequest'\n            }\n        };\n    };\n    // Query our API endpoint via an XHR GET\n    const queryApi = (api, uri, params, callback) => {\n        api.get(uri, {params: params})\n            .then((result) => {\n                if (callback) {\n                    callback(result.data);\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    };\n\n    // Our component exports\n    export default {\n        components: {\n        },\n        props: {\n            title: String,\n            start: String,\n            end: String,\n            column: String,\n            pageUrl: {\n                type: String,\n                default: '',\n            },\n            fastColor: {\n                type: String,\n                default: '#00C800',\n            },\n            averageColor: {\n                type: String,\n                default: '#FFFF00',\n            },\n            slowColor: {\n                type: String,\n                default: '#C80000',\n            },\n            maxValue: Number,\n            siteId: {\n                type: Number,\n                default: 0,\n            },\n            apiUrl: {\n                type: String,\n                default: '',\n            },\n        },\n        methods: {\n            // Load in our chart data asynchronously\n            getSeriesData: async function() {\n                const chartsAPI = Axios.create(configureApi(this.apiUrl));\n                let params = {\n                    'column': this.column,\n                    'start': this.displayStart,\n                    'end': this.displayEnd,\n                    'pageUrl': this.pageUrl,\n                    'siteId': this.siteId,\n                };\n                await queryApi(chartsAPI, '', params, (data) => {\n                    if (data.avg !== undefined) {\n                        let val = data.avg / 1000;\n                        if (val > this.displayMaxValue) {\n                            this.displayMaxValue = val;\n                        }\n                        val = (val * 100) / this.displayMaxValue;\n                        this.barColor = this.triBlend.colorFromPercentage(val);\n                        this.series = [val];\n                    }\n                });\n            },\n            onChangeRange (range) {\n                this.displayStart = range.start;\n                this.displayEnd = range.end;\n                this.getSeriesData();\n            },\n            statFormatter(val) {\n                val = (val * this.displayMaxValue) / 100;\n                return Number(val).toFixed(2) + \"s\";\n            }\n        },\n        created () {\n            this.getSeriesData();\n        },\n        mounted() {\n            if (this.$events !== undefined) {\n                this.$events.$on('change-range', eventData => this.onChangeRange(eventData));\n            }\n        },\n        data: function() {\n            return {\n                barColor: '#000',\n                series: [0],\n                displayStart: this.start,\n                displayEnd: this.end,\n                displayMaxValue: this.maxValue,\n                triBlend: new TriBlendColor(this.fastColor, this.averageColor, this.slowColor),\n            }\n        },\n    }\n</script>\n","import mod from \"-!../../../../../../../buildchain/node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use!../../../../../../../buildchain/node_modules/vue-loader/lib/index.js??vue-loader-options!./SmallSimpleBarChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../buildchain/node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use!../../../../../../../buildchain/node_modules/vue-loader/lib/index.js??vue-loader-options!./SmallSimpleBarChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SmallSimpleBarChart.vue?vue&type=template&id=4e7bedd0&\"\nimport script from \"./SmallSimpleBarChart.vue?vue&type=script&lang=js&\"\nexport * from \"./SmallSimpleBarChart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../buildchain/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"simple-bar-chart-wrapper px-3 py-1\"},[_c('div',{staticClass:\"clearafter py-1\"},[_c('div',{staticClass:\"simple-bar-chart-label text-sm font-bold text-gray-600\"},[_vm._v(_vm._s(_vm.title))]),_vm._v(\" \"),_c('div',{staticClass:\"simple-bar-chart-value text-sm font-bold text-gray-600\"},[_vm._v(_vm._s(_vm.statFormatter(_vm.series[0])))])]),_vm._v(\" \"),_c('div',{staticClass:\"py-1\"},[_c('div',{staticClass:\"simple-bar-chart-track rounded-full bg-gray-300\"},[_c('div',{staticClass:\"simple-bar-line h-1 rounded-full\",style:({ width: _vm.series[0] + '%', backgroundColor: _vm.barColor })})])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"field\">\n        <div v-if=\"samples >= 100\" class=\"heading\">\n            <p class=\"instructions\">Average of <strong>{{ formatNumber(samples) }}</strong> data sample<span v-if=\"samples !== 1\">s</span>.</p>\n        </div>\n        <p v-if=\"samples < 100\" class=\"warning\">Average of only <strong>{{ formatNumber(samples) }}</strong> data sample<span v-if=\"samples !== 1\">s</span>.</p>\n    </div>\n</template>\n\n<script>\n    import Axios from 'axios';\n\n    // Configure the api endpoint\n    const configureApi = (url) => {\n        return {\n            baseURL: url,\n            headers: {\n                'X-Requested-With': 'XMLHttpRequest'\n            }\n        };\n    };\n    // Query our API endpoint via an XHR GET\n    const queryApi = (api, uri, params, callback) => {\n        api.get(uri, {params: params})\n            .then((result) => {\n                if (callback) {\n                    callback(result.data);\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    };\n\n    // Our component exports\n    export default {\n        components: {\n        },\n        props: {\n            start: String,\n            end: String,\n            column: String,\n            displayDevModeWarning: {\n                type: Boolean,\n                default: false\n            },\n            pageUrl: {\n                type: String,\n                default: '',\n            },\n            subject: {\n                type: String,\n                default: '',\n            },\n            siteId: {\n                type: Number,\n                default: 0,\n            },\n            apiUrl: {\n                type: String,\n                default: '',\n            },\n        },\n        methods: {\n            // Load in our chart data asynchronously\n            getSeriesData: async function() {\n                const chartsAPI = Axios.create(configureApi(this.apiUrl));\n                let params = {\n                    'column': this.column,\n                    'start': this.displayStart,\n                    'end': this.displayEnd,\n                    'pageUrl': this.pageUrl,\n                    'siteId': this.siteId,\n                };\n                await queryApi(chartsAPI, '', params, (data) => {\n                    if (data.cnt !== undefined) {\n                        this.samples = data.cnt;\n                    }\n                });\n            },\n            onChangeRange (range) {\n                this.displayStart = range.start;\n                this.displayEnd = range.end;\n                this.getSeriesData();\n            },\n            formatNumber(number) {\n                return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            }\n        },\n        created () {\n            this.getSeriesData();\n        },\n        mounted() {\n            if (this.$events !== undefined) {\n                this.$events.$on('change-range', eventData => this.onChangeRange(eventData));\n            }\n        },\n        data: function() {\n            return {\n                samples: 0,\n                displayEnd: this.end,\n                displayMaxValue: this.maxValue,\n            }\n        },\n    }\n</script>\n","import mod from \"-!../../../../../../buildchain/node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use!../../../../../../buildchain/node_modules/vue-loader/lib/index.js??vue-loader-options!./SmallSamplePaneFooter.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../buildchain/node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use!../../../../../../buildchain/node_modules/vue-loader/lib/index.js??vue-loader-options!./SmallSamplePaneFooter.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SmallSamplePaneFooter.vue?vue&type=template&id=6c00e31a&\"\nimport script from \"./SmallSamplePaneFooter.vue?vue&type=script&lang=js&\"\nexport * from \"./SmallSamplePaneFooter.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../buildchain/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"field\"},[(_vm.samples >= 100)?_c('div',{staticClass:\"heading\"},[_c('p',{staticClass:\"instructions\"},[_vm._v(\"Average of \"),_c('strong',[_vm._v(_vm._s(_vm.formatNumber(_vm.samples)))]),_vm._v(\" data sample\"),(_vm.samples !== 1)?_c('span',[_vm._v(\"s\")]):_vm._e(),_vm._v(\".\")])]):_vm._e(),_vm._v(\" \"),(_vm.samples < 100)?_c('p',{staticClass:\"warning\"},[_vm._v(\"Average of only \"),_c('strong',[_vm._v(_vm._s(_vm.formatNumber(_vm.samples)))]),_vm._v(\" data sample\"),(_vm.samples !== 1)?_c('span',[_vm._v(\"s\")]):_vm._e(),_vm._v(\".\")]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import SmallRadialBarChart from '@/vue/charts/common/SmallRadialBarChart.vue';\nimport SmallSimpleBarChart from '@/vue/charts/common/SmallSimpleBarChart.vue';\nimport SmallSamplePaneFooter from '@/vue/common/SmallSamplePaneFooter.vue';\n\n// Create our vue instance\nconst vm = new Vue({\n    el: \"#cp-nav-content\",\n    components: {\n        'small-radial-bar-chart': SmallRadialBarChart,\n        'small-simple-bar-chart': SmallSimpleBarChart,\n        'small-sample-pane-footer': SmallSamplePaneFooter,\n    },\n    data: {\n    },\n    mounted() {\n    },\n});\n\n// Accept HMR as per: https://webpack.js.org/api/hot-module-replacement#accept\nif (module.hot) {\n    module.hot.accept();\n}\n"],"sourceRoot":""}