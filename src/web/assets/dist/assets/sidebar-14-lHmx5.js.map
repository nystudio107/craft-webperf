{"version":3,"file":"sidebar-14-lHmx5.js","sources":["../../../../../buildchain/src/vue/charts/common/SmallRadialBarChart.vue","../../../../../buildchain/src/vue/charts/common/SmallSimpleBarChart.vue","../../../../../buildchain/src/vue/common/SmallSamplePaneFooter.vue","../../../../../buildchain/src/js/sidebar.js"],"sourcesContent":["<template>\n  <apexcharts\n    :options=\"chartOptions\"\n    :series=\"series\"\n    height=\"180px\"\n    type=\"radialBar\"\n    width=\"100%\"\n  />\n</template>\n\n<script>\nimport Axios from 'axios';\nimport ApexCharts from 'vue-apexcharts';\nimport TriBlendColor from '@/js/tri-color-blend.js';\n\n// Configure the api endpoint\nconst configureApi = (url) => {\n  return {\n    baseURL: url,\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    }\n  };\n};\n// Query our API endpoint via an XHR GET\nconst queryApi = (api, uri, params, callback) => {\n  api.get(uri, {params: params})\n    .then((result) => {\n      if (callback) {\n        callback(result.data);\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n};\n\n// Our component exports\nexport default {\n  components: {\n    'apexcharts': ApexCharts,\n  },\n  props: {\n    title: {\n      type: String,\n      default: '',\n    },\n    start: {\n      type: String,\n      default: '',\n    },\n    end: {\n      type: String,\n      default: '',\n    },\n    column: {\n      type: String,\n      default: '',\n    },\n    pageUrl: {\n      type: String,\n      default: '',\n    },\n    fastColor: {\n      type: String,\n      default: '#00C800',\n    },\n    averageColor: {\n      type: String,\n      default: '#FFFF00',\n    },\n    slowColor: {\n      type: String,\n      default: '#C80000',\n    },\n    maxValue: {\n      type: Number,\n      default: 10000,\n    },\n    siteId: {\n      type: Number,\n      default: 0,\n    },\n    apiUrl: {\n      type: String,\n      default: '',\n    },\n  },\n  data: function () {\n    return {\n      chartOptions: {\n        chart: {\n          id: 'vuechart-dashboard-radial-bar',\n          fontFamily: 'inherit',\n          toolbar: {\n            show: false,\n          },\n        },\n        states: {\n          hover: {\n            filter: {\n              type: 'none',\n              value: 0,\n            }\n          },\n        },\n        colors: ['#000000'],\n        plotOptions: {\n          radialBar: {\n            startAngle: -135,\n            endAngle: 135,\n            hollow: {\n              size: '65%',\n            },\n            track: {\n              background: \"#dae1e7\",\n              strokeWidth: '97%',\n              margin: 5, // margin is in pixels\n              shadow: {\n                enabled: true,\n                top: 2,\n                left: 0,\n                color: '#999',\n                opacity: 1,\n                blur: 2\n              }\n            },\n            dataLabels: {\n              name: {\n                show: false,\n                fontSize: '16px',\n                color: '#333',\n                offsetY: 100\n              },\n              value: {\n                offsetY: 6,\n                fontSize: '18px',\n                color: '#333',\n                style: {\n                  cssClass: 'apexcharts-datalabel-value',\n                },\n                formatter: (val) => {\n                  val = (val * this.displayMaxValue) / 100;\n                  return Number(val).toFixed(2) + \"s\";\n                }\n              }\n            }\n          }\n        },\n        labels: [this.title],\n        title: {\n          text: this.title,\n          offsetY: 20,\n          align: 'center',\n          style: {\n            color: '#606f7b',\n            fontSize: '15px',\n            cssClass: 'apexcharts-title-text'\n          }\n        },\n        stroke: {\n          width: 1,\n          lineCap: 'round'\n        },\n      },\n      series: [0],\n      displayStart: this.start,\n      displayEnd: this.end,\n      displayMaxValue: this.maxValue,\n      triBlend: new TriBlendColor(this.fastColor, this.averageColor, this.slowColor),\n    }\n  },\n  created() {\n    this.getSeriesData();\n  },\n  mounted() {\n    if (this.$events !== undefined) {\n      this.$events.$on('change-range', eventData => this.onChangeRange(eventData));\n    }\n  },\n  methods: {\n    // Load in our chart data asynchronously\n    getSeriesData: async function () {\n      const chartsAPI = Axios.create(configureApi(this.apiUrl));\n      let params = {\n        'column': this.column,\n        'start': this.displayStart,\n        'end': this.displayEnd,\n        'pageUrl': this.pageUrl,\n        'siteId': this.siteId,\n      };\n      await queryApi(chartsAPI, '', params, (data) => {\n        if (data.avg !== undefined) {\n          let val = data.avg / 1000;\n          if (val > this.displayMaxValue) {\n            this.displayMaxValue = val;\n          }\n          val = (val * 100) / this.displayMaxValue;\n          let chartColor = this.triBlend.colorFromPercentage(val);\n          this.chartOptions = {\n            ...this.chartOptions, ...{\n              colors: [chartColor],\n              plotOptions: {\n                radialBar: {\n                  dataLabels: {\n                    value: {\n                      color: chartColor,\n                    }\n                  }\n                }\n              },\n            }\n          };\n          this.series = [val];\n        }\n      });\n    },\n    onChangeRange(range) {\n      this.displayStart = range.start;\n      this.displayEnd = range.end;\n      this.getSeriesData();\n    },\n  },\n}\n</script>\n","<template>\n  <div class=\"simple-bar-chart-wrapper px-3 py-1\">\n    <div class=\"clearafter py-1\">\n      <div class=\"simple-bar-chart-label text-sm font-bold text-gray-600\">\n        {{ title }}\n      </div>\n      <div class=\"simple-bar-chart-value text-sm font-bold text-gray-600\">\n        {{ statFormatter(series[0]) }}\n      </div>\n    </div>\n    <div class=\"py-1\">\n      <div class=\"simple-bar-chart-track rounded-full bg-gray-300\">\n        <div\n          :style=\"{ width: series[0] + '%', backgroundColor: barColor }\"\n          class=\"simple-bar-line h-1 rounded-full\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Axios from 'axios';\nimport TriBlendColor from '@/js/tri-color-blend.js';\n\n// Configure the api endpoint\nconst configureApi = (url) => {\n  return {\n    baseURL: url,\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    }\n  };\n};\n// Query our API endpoint via an XHR GET\nconst queryApi = (api, uri, params, callback) => {\n  api.get(uri, {params: params})\n    .then((result) => {\n      if (callback) {\n        callback(result.data);\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n};\n\n// Our component exports\nexport default {\n  components: {},\n  props: {\n    title: {\n      type: String,\n      default: '',\n    },\n    start: {\n      type: String,\n      default: '',\n    },\n    end: {\n      type: String,\n      default: '',\n    },\n    column: {\n      type: String,\n      default: '',\n    },\n    pageUrl: {\n      type: String,\n      default: '',\n    },\n    fastColor: {\n      type: String,\n      default: '#00C800',\n    },\n    averageColor: {\n      type: String,\n      default: '#FFFF00',\n    },\n    slowColor: {\n      type: String,\n      default: '#C80000',\n    },\n    maxValue: {\n      type: Number,\n      default: 10000,\n    },\n    siteId: {\n      type: Number,\n      default: 0,\n    },\n    apiUrl: {\n      type: String,\n      default: '',\n    },\n  },\n  data: function () {\n    return {\n      barColor: '#000',\n      series: [0],\n      displayStart: this.start,\n      displayEnd: this.end,\n      displayMaxValue: this.maxValue,\n      triBlend: new TriBlendColor(this.fastColor, this.averageColor, this.slowColor),\n    }\n  },\n  created() {\n    this.getSeriesData();\n  },\n  mounted() {\n    if (this.$events !== undefined) {\n      this.$events.$on('change-range', eventData => this.onChangeRange(eventData));\n    }\n  },\n  methods: {\n    // Load in our chart data asynchronously\n    getSeriesData: async function () {\n      const chartsAPI = Axios.create(configureApi(this.apiUrl));\n      let params = {\n        'column': this.column,\n        'start': this.displayStart,\n        'end': this.displayEnd,\n        'pageUrl': this.pageUrl,\n        'siteId': this.siteId,\n      };\n      await queryApi(chartsAPI, '', params, (data) => {\n        if (data.avg !== undefined) {\n          let val = data.avg / 1000;\n          if (val > this.displayMaxValue) {\n            this.displayMaxValue = val;\n          }\n          val = (val * 100) / this.displayMaxValue;\n          this.barColor = this.triBlend.colorFromPercentage(val);\n          this.series = [val];\n        }\n      });\n    },\n    onChangeRange(range) {\n      this.displayStart = range.start;\n      this.displayEnd = range.end;\n      this.getSeriesData();\n    },\n    statFormatter(val) {\n      val = (val * this.displayMaxValue) / 100;\n      return Number(val).toFixed(2) + \"s\";\n    }\n  },\n}\n</script>\n","<template>\n  <div class=\"field\">\n    <div\n      v-if=\"samples >= 100\"\n      class=\"heading\"\n    >\n      <p class=\"instructions\">\n        Average of <strong>{{ formatNumber(samples) }}</strong> data sample<span\n          v-if=\"samples !== 1\"\n        >s</span>.\n      </p>\n    </div>\n    <p\n      v-if=\"samples < 100\"\n      class=\"warning\"\n    >\n      Average of only <strong>{{ formatNumber(samples) }}</strong> data\n      sample<span v-if=\"samples !== 1\">s</span>.\n    </p>\n  </div>\n</template>\n\n<script>\nimport Axios from 'axios';\n\n// Configure the api endpoint\nconst configureApi = (url) => {\n  return {\n    baseURL: url,\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    }\n  };\n};\n// Query our API endpoint via an XHR GET\nconst queryApi = (api, uri, params, callback) => {\n  api.get(uri, {params: params})\n    .then((result) => {\n      if (callback) {\n        callback(result.data);\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n};\n\n// Our component exports\nexport default {\n  components: {},\n  props: {\n    start: {\n      type: String,\n      default: '',\n    },\n    end: {\n      type: String,\n      default: '',\n    },\n    column: {\n      type: String,\n      default: '',\n    },\n    displayDevModeWarning: {\n      type: Boolean,\n      default: false\n    },\n    pageUrl: {\n      type: String,\n      default: '',\n    },\n    subject: {\n      type: String,\n      default: '',\n    },\n    siteId: {\n      type: Number,\n      default: 0,\n    },\n    apiUrl: {\n      type: String,\n      default: '',\n    },\n  },\n  data: function () {\n    return {\n      samples: 0,\n      displayEnd: this.end,\n      displayMaxValue: this.maxValue,\n    }\n  },\n  created() {\n    this.getSeriesData();\n  },\n  mounted() {\n    if (this.$events !== undefined) {\n      this.$events.$on('change-range', eventData => this.onChangeRange(eventData));\n    }\n  },\n  methods: {\n    // Load in our chart data asynchronously\n    getSeriesData: async function () {\n      const chartsAPI = Axios.create(configureApi(this.apiUrl));\n      let params = {\n        'column': this.column,\n        'start': this.displayStart,\n        'end': this.displayEnd,\n        'pageUrl': this.pageUrl,\n        'siteId': this.siteId,\n      };\n      await queryApi(chartsAPI, '', params, (data) => {\n        if (data.cnt !== undefined) {\n          this.samples = data.cnt;\n        }\n      });\n    },\n    onChangeRange(range) {\n      this.displayStart = range.start;\n      this.displayEnd = range.end;\n      this.getSeriesData();\n    },\n    formatNumber(number) {\n      return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n  },\n}\n</script>\n","import Vue from 'vue';\nimport SmallRadialBarChart from '@/vue/charts/common/SmallRadialBarChart.vue';\nimport SmallSimpleBarChart from '@/vue/charts/common/SmallSimpleBarChart.vue';\nimport SmallSamplePaneFooter from '@/vue/common/SmallSamplePaneFooter.vue';\n\n// Create our vue instance\nnew Vue({\n    el: \"#cp-nav-content\",\n    components: {\n        SmallRadialBarChart,\n        SmallSimpleBarChart,\n        SmallSamplePaneFooter,\n    },\n});\n"],"names":["configureApi","url","queryApi","api","uri","params","callback","result","error","_sfc_main","ApexCharts","val","TriBlendColor","eventData","chartsAPI","Axios","data","chartColor","range","number","Vue","SmallRadialBarChart","SmallSimpleBarChart","SmallSamplePaneFooter"],"mappings":"iHAgBA,MAAAA,EAAAC,IACA,CACA,QAAAA,EACA,QAAA,CACA,mBAAA,gBACA,CACA,GAGAC,EAAA,CAAAC,EAAAC,EAAAC,EAAAC,IAAA,CACAH,EAAA,IAAAC,EAAA,CAAA,OAAAC,CAAA,CAAA,EACA,KAAAE,GAAA,CACAD,GACAA,EAAAC,EAAA,IAAA,CAEA,CAAA,EACA,MAAAC,GAAA,CACA,QAAA,IAAAA,CAAA,CACA,CAAA,CACA,EAGAC,EAAA,CACA,WAAA,CACA,WAAAC,CACA,EACA,MAAA,CACA,MAAA,CACA,KAAA,OACA,QAAA,EACA,EACA,MAAA,CACA,KAAA,OACA,QAAA,EACA,EACA,IAAA,CACA,KAAA,OACA,QAAA,EACA,EACA,OAAA,CACA,KAAA,OACA,QAAA,EACA,EACA,QAAA,CACA,KAAA,OACA,QAAA,EACA,EACA,UAAA,CACA,KAAA,OACA,QAAA,SACA,EACA,aAAA,CACA,KAAA,OACA,QAAA,SACA,EACA,UAAA,CACA,KAAA,OACA,QAAA,SACA,EACA,SAAA,CACA,KAAA,OACA,QAAA,GACA,EACA,OAAA,CACA,KAAA,OACA,QAAA,CACA,EACA,OAAA,CACA,KAAA,OACA,QAAA,EACA,CACA,EACA,KAAA,UAAA,CACA,MAAA,CACA,aAAA,CACA,MAAA,CACA,GAAA,gCACA,WAAA,UACA,QAAA,CACA,KAAA,EACA,CACA,EACA,OAAA,CACA,MAAA,CACA,OAAA,CACA,KAAA,OACA,MAAA,CACA,CACA,CACA,EACA,OAAA,CAAA,SAAA,EACA,YAAA,CACA,UAAA,CACA,WAAA,KACA,SAAA,IACA,OAAA,CACA,KAAA,KACA,EACA,MAAA,CACA,WAAA,UACA,YAAA,MACA,OAAA,EACA,OAAA,CACA,QAAA,GACA,IAAA,EACA,KAAA,EACA,MAAA,OACA,QAAA,EACA,KAAA,CACA,CACA,EACA,WAAA,CACA,KAAA,CACA,KAAA,GACA,SAAA,OACA,MAAA,OACA,QAAA,GACA,EACA,MAAA,CACA,QAAA,EACA,SAAA,OACA,MAAA,OACA,MAAA,CACA,SAAA,4BACA,EACA,UAAAC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"}