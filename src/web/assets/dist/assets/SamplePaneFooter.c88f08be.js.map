{"version":3,"file":"SamplePaneFooter.c88f08be.js","sources":["../../../../../buildchain/src/vue/common/SamplePaneFooter.vue?vue&type=template&lang.js","../../../../../buildchain/src/vue/common/SamplePaneFooter.vue"],"sourcesContent":["\n<div class=\"field\">\n    <div class=\"heading\">\n        <p class=\"instructions\">The {{ subject }} data is an <em>average</em> of <strong>{{ formatNumber(samples) }}</strong> data sample<span v-if=\"samples !== 1\">s</span>.</p>\n    </div>\n    <p v-if=\"samples < 100\" class=\"warning\">Webperf has collected less than <strong>100</strong> data samples. The sample size is not statistically significant, so above averaged results may not be meaningful.</p>\n    <p v-if=\"displayDevModeWarning\" class=\"warning\">Craft performance will be slower than normal with <code>devMode</code> enabled due to extensive logging and disabling of some caches. <span class=\"field inline-block m-0\"><a class=\"notice go\" href=\"https://craftcms.com/guides/what-dev-mode-does\" target=\"_blank\">Learn More</a></span></p>\n</div>\n","<template>\n    <div class=\"field\">\n        <div class=\"heading\">\n            <p class=\"instructions\">The {{ subject }} data is an <em>average</em> of <strong>{{ formatNumber(samples) }}</strong> data sample<span v-if=\"samples !== 1\">s</span>.</p>\n        </div>\n        <p v-if=\"samples < 100\" class=\"warning\">Webperf has collected less than <strong>100</strong> data samples. The sample size is not statistically significant, so above averaged results may not be meaningful.</p>\n        <p v-if=\"displayDevModeWarning\" class=\"warning\">Craft performance will be slower than normal with <code>devMode</code> enabled due to extensive logging and disabling of some caches. <span class=\"field inline-block m-0\"><a class=\"notice go\" href=\"https://craftcms.com/guides/what-dev-mode-does\" target=\"_blank\">Learn More</a></span></p>\n    </div>\n</template>\n\n<script>\n    import Axios from 'axios';\n\n    // Configure the api endpoint\n    const configureApi = (url) => {\n        return {\n            baseURL: url,\n            headers: {\n                'X-Requested-With': 'XMLHttpRequest'\n            }\n        };\n    };\n    // Query our API endpoint via an XHR GET\n    const queryApi = (api, uri, params, callback) => {\n        api.get(uri, {params: params})\n            .then((result) => {\n                if (callback) {\n                    callback(result.data);\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    };\n\n    // Our component exports\n    export default {\n        components: {\n        },\n        props: {\n            start: String,\n            end: String,\n            column: String,\n            displayDevModeWarning: {\n                type: Boolean,\n                default: false\n            },\n            pageUrl: {\n                type: String,\n                default: '',\n            },\n            subject: {\n                type: String,\n                default: '',\n            },\n            siteId: {\n                type: Number,\n                default: 0,\n            },\n            apiUrl: {\n                type: String,\n                default: '',\n            },\n        },\n        methods: {\n            // Load in our chart data asynchronously\n            getSeriesData: async function() {\n                const chartsAPI = Axios.create(configureApi(this.apiUrl));\n                let params = {\n                    'column': this.column,\n                    'start': this.displayStart,\n                    'end': this.displayEnd,\n                    'pageUrl': this.pageUrl,\n                    'siteId': this.siteId,\n                };\n                await queryApi(chartsAPI, '', params, (data) => {\n                    if (data.cnt !== undefined) {\n                        this.samples = data.cnt;\n                    }\n                });\n            },\n            onChangeRange (range) {\n                this.displayStart = range.start;\n                this.displayEnd = range.end;\n                this.getSeriesData();\n            },\n            formatNumber(number) {\n                return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            }\n        },\n        created () {\n            this.getSeriesData();\n        },\n        mounted() {\n            this.$events.$on('change-range', eventData => this.onChangeRange(eventData));\n        },\n        data: function() {\n            return {\n                samples: 0,\n                displayStart: this.start,\n                displayEnd: this.end,\n                displayMaxValue: this.maxValue,\n            }\n        },\n    }\n</script>\n"],"names":[],"mappings":"gDAAA,GAAI,GAAS,UAAY,CAAC,GAAI,GAAI,KAAS,EAAG,EAAI,eAAmB,EAAG,EAAI,MAAM,IAAI,EAAG,MAAO,GAAG,MAAM,CAAC,YAAY,SAAS,CAAC,EAAG,MAAM,CAAC,YAAY,WAAW,CAAC,EAAG,IAAI,CAAC,YAAY,gBAAgB,CAAC,EAAI,GAAG,OAAO,EAAI,GAAG,EAAI,SAAS,gBAAgB,EAAG,KAAK,CAAC,EAAI,GAAG,aAAa,EAAI,GAAG,QAAQ,EAAG,SAAS,CAAC,EAAI,GAAG,EAAI,GAAG,EAAI,aAAa,EAAI,aAAa,EAAI,GAAG,gBAAiB,EAAI,UAAY,EAAG,EAAG,OAAO,CAAC,EAAI,GAAG,OAAO,EAAI,KAAK,EAAI,GAAG,SAAU,EAAI,QAAU,IAAK,EAAG,IAAI,CAAC,YAAY,WAAW,CAAC,EAAI,GAAG,oCAAoC,EAAG,SAAS,CAAC,EAAI,GAAG,SAAS,EAAI,GAAG,uHAAuH,EAAI,KAAM,EAAI,sBAAuB,EAAG,IAAI,CAAC,YAAY,WAAW,CAAC,EAAI,GAAG,sDAAsD,EAAG,OAAO,CAAC,EAAI,GAAG,aAAa,EAAI,GAAG,oEAAoE,EAAI,GAAG,KAAK,EAAI,QACj7B,EAAkB,CAAC,UAAY,CAAC,GAAI,GAAI,KAAS,EAAG,EAAI,eAAmB,EAAG,EAAI,MAAM,IAAI,EAAG,MAAO,GAAG,OAAO,CAAC,YAAY,0BAA0B,CAAC,EAAG,IAAI,CAAC,YAAY,YAAY,MAAM,CAAC,KAAO,iDAAiD,OAAS,WAAW,CAAC,EAAI,GAAG,oBCavR"}